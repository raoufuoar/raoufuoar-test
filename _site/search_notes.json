[
  
    {

      "title"    : "How to use notenote.link features on your website",
      "url"      : "/notes/How-to-use-the-special-features",
      "category" : "",
      "tags"     : "Theme",
      "content"  : "The default features\n\nAll the default jekyll markdown features are made available such that they don't cause any conflict with the custom features that we have implemented.\n\nInternal links (simple and with alt-text) and LateX delimiters in markdown are compatible with [[Obsidian::https://obsidian.md]]. I'd recommend using it as a CMS for managing your notes. See the page about [[Obsidian integration]] for more details.\n\nTo see how to the raw markdown gets generated, go to the [[Test page to see how the raw markdown is rendered]]\n\nThe Custom features\n\n1. Creating a wiki-style link\n\nGeneral Syntax\n\n\n  \n    Internal links: [​[​Some Link]]\n  \n  \n    Internal links with alternative text: [​[​Some Link\\|Alt text]]\n  \n  \n    External links: [​[​Some Text::https://address-to-the-website]]\n  \n\n\nAnything text inside a double square bracket is considered as an internal link. The text has to be a valid title, if you provide a random text inside double square brackets, it will showup highlighted in yellow telling you that there is no essay/article/file with the mentioned title.\n\nSimilarly, for external links all you have to do is add a double colon after the \"Alt text\" and enter the link to the website after the double colon as seen below.\n\nExamples\n\nExample of an internal link that points to a valid post or page, that is, a page with the title (not url) mentioned in the double brackets.\n\n\n  Raw Syntax: [​[​Obsidian integration]]\n\n  Rendered Text: [[Obsidian integration]]\n\n\nExample of an internal link that do not point to a valid post or page, that is, a page with the title (not url) mentioned in the double brackets.\n\n\n  Raw Syntax: [​[Title of a non-existent page]]\n\n  Rendered Text: [[Title of a non-existent page]]\n\n\n2. Creating a sidenote or a marginnote\n\nGeneral Syntax\n\n\n  \n    Sidenote: [​[Some Text::keyword-of-the-type-of-the-sidenote]]\n  \n  \n    Marginnote: [​[​Some Text::keyword-of-the-type-of-the-marginnote]]\n  \n\n\n\n  \n    \n      \n        Type of the sidenote/marginnote\n        keyword\n      \n    \n    \n      \n        Left Sidenote\n        lsn\n      \n      \n        Right Sidenote\n        rsn\n      \n      \n        Left Marginnote\n        lmn\n      \n      \n        Right Marginnote\n        rmn\n      \n    \n  \n\n\nSo, all you have to do is type in the keywords of the corresponding type of sidenote or marginnote after the double colon in the above syntax\n\nExamples\n\nExample of a sidenote to the right side of the page:\n\n\n  Raw Syntax: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec rutrum tortor in pharetra vehicula. Fusce gravida lacus ac sem luctus congue at id justo. Ut sed tempus ante. [​[Phasellus mollis lectus id efficitur mollis.::rsn]] Suspendisse sit amet diam nec justo rhoncus tristique. Ut blandit faucibus nisi vitae rutrum. Vivamus fermentum efficitur justo non facilisis.\n\n  Rendered Text: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec rutrum tortor in pharetra vehicula. Fusce gravida lacus ac sem luctus congue at id justo. Ut sed tempus ante. [[Phasellus mollis lectus id efficitur mollis.::rsn]] Suspendisse sit amet diam nec justo rhoncus tristique. Ut blandit faucibus nisi vitae rutrum. Vivamus fermentum efficitur justo non facilisis.\n\n\nSame goes with lsn, rmn, lmn\n\n3. Highlighting a piece of text\n\nGeneral Syntax\n\n\n  [​[​Some Link::highlight]]\n\n\nThere is only one color right now in which it highlights, a light bluish color, but you can easily extend it to support multiple colors by tinkering with it in content.html file in _includes directory.\n\nExamples\n\n\n  Raw Syntax: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec rutrum tortor in pharetra vehicula. Fusce gravida lacus ac sem luctus congue at id justo. Ut sed tempus ante. [​[Phasellus mollis lectus id efficitur mollis.::highlight]] Suspendisse sit amet diam nec justo rhoncus tristique. Ut blandit faucibus nisi vitae rutrum. Vivamus fermentum efficitur justo non facilisis.\n\n  Rendered Text: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec rutrum tortor in pharetra vehicula. Fusce gravida lacus ac sem luctus congue at id justo. Ut sed tempus ante. [[Phasellus mollis lectus id efficitur mollis.::highlight]] Suspendisse sit amet diam nec justo rhoncus tristique. Ut blandit faucibus nisi vitae rutrum. Vivamus fermentum efficitur justo non facilisis.\n\n\n4. Partial Transclusion\n\nTransclusion is just a natural extension of sidenote and marginnote feature.\n\nGeneral Syntax\n\n\n  \n    Sidenote-transclusion: [​[Some Text::keyword-of-the-type-of-the-sidenote-transclusion]]\n  \n  \n    Marginnote-transclusion: [​[​Some Text::keyword-of-the-type-of-the-marginnote-transclusion]]\n  \n\n\n\n  \n    \n      \n        Type of the sidenote/marginnote transclusion\n        keyword\n      \n    \n    \n      \n        Left Sidenote Transclusion\n        lsn-transclude\n      \n      \n        Right Sidenote Transclusion\n        rsn-transclude\n      \n      \n        Left Marginnote Transclusion\n        lmn-transclude\n      \n      \n        Right Marginnote Transclusion\n        rmn-transclude\n      \n    \n  \n\n\nSo, all you have to do is type in the keywords of the corresponding type of sidenote or marginnote after the double colon in the above syntax\n\nExamples\n\nExample of a transclusion to the right side of the page:\n\n\n  Raw Syntax: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec rutrum tortor in pharetra vehicula. Fusce gravida lacus ac sem luctus congue at id justo. Ut sed tempus ante. [​[Obsidian integration::rmn-transclude]] Suspendisse sit amet diam nec justo rhoncus tristique. Ut blandit faucibus nisi vitae rutrum. Vivamus fermentum efficitur justo non facilisis.\n\n  Rendered Text: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec rutrum tortor in pharetra vehicula. Fusce gravida lacus ac sem luctus congue at id justo. Ut sed tempus ante. [[Obsidian integration::rmn-transclude]] Suspendisse sit amet diam nec justo rhoncus tristique. Ut blandit faucibus nisi vitae rutrum. Vivamus fermentum efficitur justo non facilisis.\n\n\nSame goes with rsn, lsn, lmn\n\n5. Wrapping a text inside a box\n\nGeneral Syntax\n\n\n  [​[Some Text::wrap]]\n\n\nExamples\n\n\n  Raw Syntax: [​[Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec rutrum tortor in pharetra vehicula. Fusce gravida lacus ac sem luctus congue at id justo. Ut sed tempus ante. Suspendisse sit amet diam nec justo rhoncus tristique. Ut blandit faucibus nisi vitae rutrum. Vivamus fermentum efficitur justo non facilisis::wrap]].\n\n  Rendered Text: [[Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec rutrum tortor in pharetra vehicula. Fusce gravida lacus ac sem luctus congue at id justo. Ut sed tempus ante. Suspendisse sit amet diam nec justo rhoncus tristique. Ut blandit faucibus nisi vitae rutrum. Vivamus fermentum efficitur justo non facilisis.::wrap]]\n\n\n6. Flashcard\n\nGeneral Syntax\n\n\n  [​[Some Text::srs]]\n\n\nExamples\n\n\n  Raw Syntax: Lorem ipsum dolor sit amet, consectetur adipiscing elit. [​[Donec rutrum tortor in pharetra vehicula::srs]]. Fusce gravida lacus ac sem luctus congue at id justo. Ut sed tempus ante. Suspendisse sit amet diam nec justo rhoncus tristique. Ut blandit faucibus nisi vitae rutrum. Vivamus fermentum efficitur justo non facilisis.\n\n  Rendered Text: Lorem ipsum dolor sit amet, consectetur adipiscing elit. [[Donec rutrum tortor in pharetra vehicula::srs]]. Fusce gravida lacus ac sem luctus congue at id justo. Ut sed tempus ante. Suspendisse sit amet diam nec justo rhoncus tristique. Ut blandit faucibus nisi vitae rutrum. Vivamus fermentum efficitur justo non facilisis.\n\n\n7. Specific classes for changing font-type, font-size, and font-weight\n\nThere are classes like very-small, medium-small, small, small-medium, medium, medium-large, large, very-large; that can be used to change the size of your text directly from markdown like this:\n\n\n  Raw Syntax:\n  {:.large}\nSome text here that needs to be enlarged\n  \n\n  Rendered Text:\n\n  Some text here that needs to be enlarged\n\n\nSimilarly there are classes like regular-sans, serif, bold, italic, oblique, bolder, etc for formatting the text.\n\n\n  Raw Syntax:\n\n  {:.medium .serif .oblique}\nSome text here that needs to be enlarged\n  \n\n  Rendered Text:\n\n  Some text here that needs to be enlarged\n\n\nOther common classes are .boxit that is used to wrap the text, .disable-user-select to disallow users from being able to select a particular piece of text by selecting it, etc. There are more classes like these which you can see in the file style.css. Once you figure out which class to use, all you have to do is just add the class before the text you want inside a curl brace like this ​{:&lt;classnames-with-dot-prepended-to-them&gt;​}\n\n8. Table of Content\n\nnotenote.link supports automatic table of content (toc) generation. Just add a toc: true line in the front matter at the beginning of your post.\n\nYou can modify the maximum header level included in the toc by changing number in the following option in config.yml :\ntoc:\n  max_level: 3\n\n\n9. Note maturity\nSince this jekyll theme aims at mirroring your Obsidian notebook, the note content may note be mature or complete yet.\n\nTherefore, we use front matter to classify the notes in the following categories (in order of appearance in the front page feed) :\n\n\n  season: summer : the note is near-complete (more than 80% done)\n  season: spring : the note is in progress and has already good content\n  season: winter : the note has just started, a summary is present however.\n  season: automn : the note needs refactoring or some rewriting. It won't appear in the front-page feed.\n\n\nWhy use seasons ? Since this theme is a form of 'digital garden', I thought it would make sense to keep the analogy.\n\n10. Other implicit features.\n\nFeatures like backlinks, context menu, related posts, page preview are available by default as they are implemented using CSS and JS. So, you don't have to do anything other than write as you would normally to make use of those features.\n\n\n\ngraph LR;\n  A--&gt;B;\n  click A \"../notes/how-markdown-is-rendered\"\n\n\n\n\ngraph LR;\n  A--&gt;B;\n  click A \"../notes/how-markdown-is-rendered\""

    } ,
  
    {

      "title"    : "How to setup this site",
      "url"      : "/notes/How-to-setup-this-site",
      "category" : "",
      "tags"     : "Theme",
      "content"  : "This is going to be a super simple post about how to setup and use this theme for your own website.\n\nSetup Prerequisites\n\nFor this tutorial, we’ll need to install a few things on your machine (you may have some of these already). Following the instructions on each website to install them.\n\n\n  [[Ruby::https://www.ruby-lang.org/]]\n  [[RubyGems::https://rubygems.org/]]\n  [[Git::https://git-scm.com/downloads]]\n\n\nYou’ll also need to create accounts on the following services:\n\n\n  [[GitHub::https://www.github.com/join]] (to store the website)\n  [[Netlify::https://app.netlify.com/signup]] (to serve the website so others can see)\n\n\nOnce you are all set with the prerequisites, we can then get to the fun part of getting it to appear on your screen. Let's get started with that.\n\n1. Create a fork of the template repository\n\nTo simplify things, I provide the template showed in the image above to get started. You can always tweak this template to your taste later.\n\nVisit the GitHub page for my template repository [[Maxence-L/notenote.link::https://github.com/Maxence-L/notenote.link]], and fork it to your account using the Fork button:\n\n\n  \n\n\nOnce the forking process is complete, you should have a fork (essentially a copy) of my template in your own GitHub account. On the GitHub page for your repository, click on the green “Clone or download” button, and copy the URL: we’ll need it for the next step.\n\n2. Clone your repository locally\n\nNext, we want to download the files from your GitHub repository onto your local machine. To do this, replace  in the command below with the URL you copied in the previous step, then execute this command:\n\n$ git clone &lt;YOUR_COPIED_URL_HERE&gt; my-personal-website\n\n\nAs a reference point, this is how it looks like for me (the difference is likely just the GitHub username):\n\n$ git clone git@github.com/Maxence-L/notenote.link my-personal-website\n\n\nThen, navigate into the directory that was just created:\n\n$ cd my-personal-website\n\n\n3. Test out the site locally\n\nSweet! You now have your repository’s source code on your machine. Within the my-personal-website directory, run the following command to install the necessary dependencies like Jekyll:\n\n$ bundle\n\n\nOnce that’s done, ask Jekyll to start serving the site locally:\n\n$ bundle exec jekyll serve\n\n\nThen, open up [[http://localhost:4000::http://localhost:4000]] in your browser.\n\nIf everything’s done correctly, you should now see the home page of your Personal Jekyll Website with notenote.link Theme. 🎉\n\nKeep in mind that this site is only available locally (notice the localhost part of the URL), so if we want it to be available on the Internet for everyone to enjoy, we need to deploy it to the Internet: we’ll use Netlify for that in the next step.\n\n4. Connect your GitHub repository to Netlify\n\nNetlify lets you automatically deploy your personal website on to the Internet when you update your GitHub repository. To do this, we need to connect your GitHub repository to Netlify:\n\n\n  Log in to Netlify\n  Once logged in, click the “New site from Git” button\n  On the next page, select GitHub as the continuous deployment provider (you may need to authorize the connection, in which case, approve it)\n  On the next page, select your website repository from the list.\n  On the next page, replace the basic build settings with the following.\n    \n      Type in \"jekyll build\" (without the quotes) inside the text field titled \"Build Command\".\n      Similarly type in \"_site/\" (without the quotes) inside the text field titled \"Publish Directory\".\n    \n  \n  On the next page, keep the default settings, and click on “Deploy site”.\n\n\nThat was easy! We’re almost done.\n\nWait a couple of minutes for the initial deploy to complete.\n\nOnce that’s done, your website should be available on the Internet via a generic Netlify URL, which you can change to a custom domain later if you’d like.\n\nNow the cool thing is this: whenever you push an update to your GitHub repository, Netlify will automatically deploy your updates to the Internet.\n\n5. Start producing content :\n\nAt this point, you can start updating the files on your machine (in the my-personal-website folder) to change your jekyll seamless based website to your liking: update the copy, add some notes, tweak the layout, customize the colors, etc. Once you have something you’re happy with, push your changes to your GitHub repository with the following commands:\n\n$ git add --all\n$ git commit -m 'Update content'\n$ git push origin master\n\n\nIf that command succeeds and the rest of the tutorial was done correctly, in a couple of minutes, you should see your changes live on your Netlify website. 🚀\n\nAnd we’re done! You now have your own notenote.link based Personal Website ."

    } ,
  
    {

      "title"    : "LaTeX",
      "url"      : "/notes/LaTeX",
      "category" : "",
      "tags"     : "code",
      "content"  : "Here are some of my LaTeX projects:\n\nSimple template for scientists.\n\nI will update this page in a small time to show alist of tips and tricks I collected over the years."

    } ,
  
    {

      "title"    : "MATLAB",
      "url"      : "/notes/MATLAB",
      "category" : "",
      "tags"     : "code",
      "content"  : "startup.m\n\n\n  startup executes user-specified commands when starting MATLAB®.\n\n\nUse this file to add folders to the MATLAB paths, restore the vanished figure toolbar buttons (zoom, pan, …) and set custom-defined parameters.\n\n%% startup.m\n\n% add folder to MATLAB path\naddpath(genpath('&lt;path&gt;'))\n\n% Since Matlab 2018b figure toolbar disappeared, this reverts the change\nset(groot,'defaultFigureCreateFcn','addToolbarExplorationButtons(gcf)');\n\n% Change default Colormap from parula to hot\nset(0, 'defaultFigureColormap', hot)\n\n% define some physics\nhc = 1239.84193;        % in eV*nm\nc = 299792458;          % in m/s\ne = 1.6021766209e-19;   % in C\na0 = 0.52917721067e-10; % in m\nme = 9.10938356e-31;    % in kg\n\nHere, we have also defined some physical parameters often used. Make sure you reserve those variable names and do not use them for something else in the code.\n\nLive scripts\n\nLive Scripts are somewhat the MATLAB-equivalent of Jupyter Notebooks. They are really useful to display the code, text, annotations and output on a single page.\n\nNote that a MATLAB kernel seems to be available in Jupyter Notebooks (see for example here for a working example."

    } ,
  
    {

      "title"    : "Obsidian integration",
      "url"      : "/notes/Obsidian-integration",
      "category" : "",
      "tags"     : "CMS",
      "content"  : "The main purpose of this fork, other than cosmetic changes, is to create a web representation of an [[Obsidian::https://obsidian.md]] vault, using the [[Simply-Jekyll::https://github.com/raghuveerdotnet/simply-jekyll]] template.\n\nUsage\n\nThings to know :\n\n\n  \n    Markdown is fully-compatible (including Latex delimiters !)\n  \n  \n    There are now only notes (no blog posts). If you really want blog posts along notes, a hack is to set the YAML season of blog posts to summer and notes to automn - they won't appear in feed but will be searchable and appear in tags page.\n  \n  \n    Code is now correctly indented\n  \n  \n    You can change the code template by replacing the css in /assets/css/highlight.css by any template from [[pygment.css::https://github.com/richleland/pygments-css]]\n  \n  \n    Wikilinks are usable : [​[​…]],\n  \n  \n    Also alt-text wikilinks (with transclusion !) : [​[​original link\\|alternative text]]\n  \n\n\nPlease note : You need to escape the pipe character in Obsidian (\\| instead of |). This won't break Obsidian's functionality.\n\n\n  Fresh new feature : you can also link headers ! Use # when typing the wikilink : [​[Obsidian integration#Obsidian setup|Alt-text]] will create the following link : [[Obsidian integration#Obsidian setup|Alt-text]] (click on it to see the effect)\n\n\nPlease note : This feature will work only if you write alternative text in the link : [[Obsidian integration#Obsidian setup]] won't work1.\n\n\n  You can use [[Simply-Jekyll custom features::https://simply-jekyll.netlify.app/posts/exploring-the-features-of-simply-jekyll]], such as flashcards : [[flashcards !::srs]] - but don't click on it in Obsidian, else it will create a new page.\n\n\nObsidian setup\n\nInstallation\nAfter having forked [[notenote.link::https://github.com/Maxence-L/notenote.link]] on your computer, open Obsidian and create a vault in the root folder (/notenote.link).\n\nThis will allow you to modify all your markdown files inside the directory.\n\nabout.md is in the root folder.\n\nYour notes should go to the _notes folder, images in assets/img. You need to tell Obsidian where to put the new notes. In Preferences/File, enter the following settings :\n\n\n\n\n  Default location for new notes : In the folder specified below`\n  Folder to create new notes in : _notes\n  New link format : Relative Path to file\n  Attachment folder path : `assets/img\n\n\nFrontmatter\n\nFront matter is needed at the beginning of your note. Here is the template :\n\n---\ntitle: My Note\ntags: tag1\ntoc: true\nseason: winter\n---\n\n\nYou can hide it in Obsidian by toggling the option \"Show Frontmatter\" in the Preferences/Editor menu.\n\nImages\n\nImages are the tricky part :\n\n\n  You can use vanilla markdown links: ![](/asset/img/img.png)\n  You can drag/drop/paste images in Obsidian, which will create a link such as : [​[​../assets/img/Pasted image.png]]\n\n\nA quick hack in the last case is just to change the brackets : ![](../assets/img/Pasted image.png)\n\n\n  \n    \n      I don't use it, so I didn't change it but if it's important for you open an issue and I may fix it. &#8617;"

    } ,
  
    {

      "title"    : "Test page to see how the raw markdown is rendered",
      "url"      : "/notes/how-markdown-is-rendered",
      "category" : "",
      "tags"     : "markdown",
      "content"  : "This is intended as a quick reference and showcase.\n\nTable of Contents\n\n  [[Headers::#heading]]\n  [[Emphasis::#emphasis]]\n  [[Lists::#lists]]\n  [[Links::#links]]\n  [[Images::#images]]\n  [[Code and Syntax Highlighting::#syntax]]\n  [[Math Expressions::#math]]\n  [[Tables::#tables]]\n  [[Blockquotes::#blockquotes]]\n  [[Inline HTML::#inline]]\n  [[Horizontal Rule::#hr]]\n  [[Line Breaks::#br]]\n\n\nHeadings\n\n\n# H1 \n## H2 \n### H3 \n#### H4 \n##### H5 \n###### H6\n\n\nH1\nH2\nH3\nH4\nH5\nH6\n\nEmphasis\n\n\nEmphasis, aka italics, with *asterisks* or _underscores_. \n\nStrong emphasis, aka bold, with **asterisks** or __underscores__. \n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~ \n\n\nEmphasis, aka italics, with asterisks or underscores.\n\nStrong emphasis, aka bold, with asterisks or underscores.\n\nCombined emphasis with asterisks and underscores.\n\nStrikethrough uses two tildes. Scratch this.\n\nLists\n\n1. First ordered list item \n...1. Ordered sublist \n2. Another item \n...* Unordered sublist \n3. Actual numbers don't matter, just that it's a number \n4. And another item. \n\n⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown). \n\n⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅ \n⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅ \n⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.) \n\n* Unordered list can use asterisks \n- Or minuses\n+ Or pluses\n\n\n\n  First ordered list item\n    \n      Ordered sublist\n    \n  \n  Another item\n    \n      Unordered sublist\n    \n  \n  Actual numbers don't matter, just that it's a number\n  \n    And another item.\n\n    You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n    To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅\n Note that this line is separate, but within the same paragraph.⋅⋅\n (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n  \n\n\n\n  Unordered list can use asterisks\n  Or minuses\n  Or pluses\n\n\nLinks\n\n\n[I'm an inline-style link](https://www.google.com)\n\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself].\n\nURLs and URLs in angle brackets will automatically get turned into links. \nhttp://www.example.com or &lt;http://www.example.com&gt; and sometimes \nexample.com (but not on Github, for example).\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\n[1]: http://slashdot.org\n[link text itself]: http://www.reddit.com\n\n\nI'm an inline-style link\n\nI'm an inline-style link with title\n\nI'm a reference-style link\n\nI'm a relative reference to a repository file\n\nYou can use numbers for reference-style link definitions\n\nOr leave it empty and use the link text itself.\n\nURLs and URLs in angle brackets will automatically get turned into links. \nhttp://www.example.com or http://www.example.com and sometimes \nexample.com (but not on Github, for example).\n\nSome text to show that the reference links can follow later.\n\nImages\n\n\nHere's our logo (hover to see the title text):\n\nInline-style: \n![alt text](/assets/img/profile.png \"Logo Title Text 1\")\n\nReference-style: \n![alt text][logo]\n\n[logo]: /assets/img/profile.png \"Logo Title Text 2\"\n\n\nHere's our logo (hover to see the title text):\n\nInline-style:\n\n![alt text](/assets/img/profile.png \"Logo Title Text 1\")\n\n\n\n\nReference-style:\n\n![alt text][logo]\n \n [logo]: /assets/img/profile.png \"Logo Title Text 2\"\n\n\n\n\nYou can center the picture by adding #center at the end of the image path :\n\n![alt text](/assets/img/profile.png#center \"Logo Title Text 1\")\n\n\n\n\nCode and Syntax Highlighting\n\n\nCode blocks are part of the Markdown spec, but syntax highlighting isn't. However, many renderers – like Github's and Markdown Here – support syntax highlighting. Which languages are supported and how those language names should be written will vary from renderer to renderer. Markdown Here supports highlighting for dozens of languages (and not-really-languages, like diffs and HTTP headers);\n\nInline `code` has `back-ticks around` it.\n\n\nInline code has back-ticks around it.\n\nBlocks of code are either fenced by lines with three back-ticks ```, or are indented with four spaces. I recommend only using the fenced code blocks – they're easier and only they support syntax highlighting.\n\n \n\n```javascript\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n```\n \n```python\ns = \"Python syntax highlighting\"\nprint s\n```\n \n```\nNo language indicated, so no syntax highlighting. \nBut let's throw in a tag.\n```\n\n\n\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n\n\ns = \"Python syntax highlighting\"\nprint s\n\n\nNo language indicated, so no syntax highlighting. \nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.\n\n\nMath expressions\n\n\nYou can write math expressions using the Latex markup language between dollar signs.\n\nThey can be written inline (single-dollar signs $...$) or as a whole block (double dollar signs with a line above and under $$...$$).\n\nFor example,\nBayes Theorem is $P(A \\vert B) = \\frac{P(B \\vert A)\\cdot P(A)}{P(B)}$\n\nwill render as :\n\nBayes Theorem is : $P(A \\vert B) = \\frac{P(B \\vert A)\\cdot P(A)}{P(B)}$\n\nWhereas\n\nBayes Theorem is :\n\n\\$\\$P(A \\vert B) = \\frac{P(B \\vert A)\\cdot P(A)}{P(B)}\\$\\$\n\n\n\nwill render as :\n\nBayes Theorem is :\n\n$$\nP(A \\vert B) = \\frac{P(B \\vert A)\\cdot P(A)}{P(B)}\n$$\n\nPlease note that for a math block to be displayed correctly, it needs to be separated by an empty line, above and below. Besides, the pipe character | may conflict with Markdown : it is recommended to use \\vert instead.\n\nTables\n\n\nTables aren't part of the core Markdown spec, but they are part of GFM and Markdown Here supports them. They are an easy way of adding tables to your email – a task that would otherwise require copy-pasting from another application.\n\nColons can be used to align columns.\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | \\$1600 |\n| col 2 is      | centered      |   \\$12 |\n| zebra stripes | are neat      |    \\$1 |\n\nThere must be at least 3 dashes separating each header cell.\nThe outer pipes \\(|) are optional, and you don't need to make the \nraw Markdown line up prettily. You can also use inline Markdown.\n\nMarkdown | Less | Pretty\n--- | --- | ---\n\\*Still\\* | `renders` | \\*\\*nicely\\*\\*\n1 | 2 | 3\n\n\nColons can be used to align columns.\n\n\n  \n    \n      Tables\n      Are\n      Cool\n    \n  \n  \n    \n      col 3 is\n      right-aligned\n      $1600\n    \n    \n      col 2 is\n      centered\n      $12\n    \n    \n      zebra stripes\n      are neat\n      $1\n    \n  \n\n\nThere must be at least 3 dashes separating each header cell.\nThe outer pipes (|) are optional, and you don't need to make the \nraw Markdown line up prettily. You can also use inline Markdown.\n\n\n  \n    \n      Markdown\n      Less\n      Pretty\n    \n  \n  \n    \n      Still\n      renders\n      nicely\n    \n    \n      1\n      2\n      3\n    \n  \n\n\nBlockquotes\n\n\n&gt; Blockquotes are very handy in email to emulate reply text.\n&gt; This line is part of the same quote.\n\nQuote break.\n\n&gt; This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.\n\n\n\n  Blockquotes are very handy in email to emulate reply text.\nThis line is part of the same quote.\n\n\nQuote break.\n\n\n  This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote.\n\n\nInline HTML\n\nYou can also use raw HTML in your Markdown, and it'll mostly work pretty well.\n\n&lt;dl&gt;\n  &lt;dt&gt;Definition list&lt;/dt&gt;\n  &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;\n\n  &lt;dt&gt;Markdown in HTML&lt;/dt&gt;\n  &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;\n&lt;/dl&gt;\n\n\nYou can also use raw HTML in your Markdown, and it'll mostly work pretty well.\n\n\n  Definition list\n  Is something people use sometimes.\n\n  Markdown in HTML\n  Does *not* work **very** well. Use HTML tags.\n\n\nHorizontal Rule\n\n\nThree or more...\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n\n\nThree or more…\n\n\n\nHyphens\n\n\n\nAsterisks\n\n\n\nUnderscores\n\nLine Breaks\n\n\nMy basic recommendation for learning how line breaks work is to experiment and discover – hit  once (i.e., insert one newline), then hit it twice (i.e., insert two newlines), see what happens. You'll soon learn to get what you want. \"Markdown Toggle\" is your friend.\n\nHere are some things to try out:\n\nHere's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\n\n\nHere's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a separate paragraph.\n\nThis line is also a separate paragraph, but…\nThis line is only separated by a single newline, so it's a separate line in the same paragraph.\n\n2021-06-13\n\nSunday 13th June 2021\n15:13 PM\n\n\n  Handwriting OCR\n    \n      Real-time\n      [ ]\n    \n  \n  Bregman, Utopies et les Humains sont bons\n  le triangle des Bermudes debunked par les assureurs\n  Fouloscopie, Comment sommes-nous connectés\n  Fouloscopie, Comment fonctionne un essaim de robots\n  Fouloscopie, les Foules de synthèse\n  Nerd Nite, Metric System lecture\n\n\nPublishing Obsidian on Github Pages\n\nUsing notenote.link with a little bit of tweaking this can be done.\n ## Chronology\n\n\n\ngraph LR;\n\nA(2021-06-12) --&gt; B(2021-06-13) --&gt; C(2021-06-14);\n\nclick A \"/talks\"\nclick B \"/\";\nclick C \"/\";\n\nclass A internal-link;\nclass B internal-link;\nclass C internal-link;\n\n\n\ngraph LR;\n\nA(2021-06-12) --&gt; B(2021-06-13) --&gt; C(2021-06-14);\n\nclick A \"https://www.google.com\";\nclick B \"/\";\nclick C \"/\";\n\n\n\n\n\nLicense: CC-BY"

    } ,
  
    {

      "title"    : "Python",
      "url"      : "/notes/python",
      "category" : "",
      "tags"     : "Code",
      "content"  : "Here's a quick glance at a few of my python projects:\n\n\n    Realistic simulation of a billiard game (Report: , Slides )\n    Programming project realised during second python course at university. A physically realistic simulation of a billiard game was attemped based on the works of Leckie and Greenspan (ref.). Based on the parametrisation of the balls trajectory which enables analytical determination of the instants at which balls\n      collide or change state as solutions of polynomials equations. We study the movement of the ball after impact, taking into account rotation\n      of the ball and investigating some simple two-ball shots with effects (follow and draw).\n      \n  \n        Billiard simulation. The general look-and-feel of the simulation was coded in VPython whereas the physics was simulated in python.\n\n      \n  \n  Simulation of the detection of muons in a Cherenkov detector (Slides )\n    Programming project realised during the first python course at university. A Cherenkov detector is usually a huge reservoir of heavy water with its inner surface lined with photodetectors. When a neutrino goes through the medium it can decay into a muon which emits photons. Thus depending on the angle of incidence of the neutrino, the velocity of the muon, several patterns can emerge. This project simulates the patterns that can be obtained in such an experiment and has the advantage to produce real nice images.\n\n  \n  Event detection in a Cherenkov detector."

    } 
  
]